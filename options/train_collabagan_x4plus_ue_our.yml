# general settings
name: train_GANx4plus_our_100k_lr2e-4_wogn_glossauto_add_ue_tv_makebad_g1d3
model_type: GANOWGNModel
scale: 4
num_gpu: auto  # auto: can infer from your visible devices automatically. official: 4 GPUs
manual_seed: 0


# USM the ground-truth
l1_gt_usm: True
percep_gt_usm: True
gan_gt_usm: False
high_order_degradation: False
use_ue_atten: True
use_autoloss: True

gt_size: 256
queue_size: 180
GN: False

# dataset and data loader settings
datasets:
  train:
    name: RELLISUR
    type: GANAddlhPairedDataset
    dataroot_gt: ./dataset/RELLISUR-Dataset/Train/NLHR-Duplicates/X4
    dataroot_lq: ./dataset/RELLISUR-Dataset/Train/LLLR
    dataroot_lh: ./dataset/RELLISUR-Dataset/Train/NLHR-Duplicates/X1
    meta_info: ~
    io_backend:
      type: disk
    use_grayatten: False

    gt_size: 256
    use_hflip: True
    use_rot: False

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 4
    batch_size_per_gpu: 8
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  # Uncomment these for validation
  val:
    name: validation
    type: GANPairedDataset
    dataroot_gt: ./dataset/RELLISUR-Dataset/Test_crop/NLHR-Duplicates/X4
    dataroot_lq: ./dataset/RELLISUR-Dataset/Test_crop/LLLR
    io_backend:
      type: disk
    use_grayatten: False

# network structures
network_g:
  type: Netv2ueatten
  inp_channels: 3
  out_channels: 3
  n_feat: 80
  chan_factor: 1.5
  n_RRG: 4
  n_MRB: 2
  height: 3
  width: 2
  scale: 4

network_d:
  type: UNetDiscriminatorSN
  num_in_ch: 3
  num_feat: 64
  skip_connection: True

# path
path:
  # use the pre-trained Real-ESRNet model
  pretrain_network_g: ~
  param_key_g: params_ema
  strict_load_g: true
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 2e-4
    weight_decay: 0
    betas: [0.9, 0.99]
  optim_d:
    type: Adam
    lr: !!float 2e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [20000, 40000, 60000, 80000]
    gamma: 0.5

  total_iter: 100000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean
  # perceptual loss (content and style losses)
  perceptual_opt:
    type: PerceptualLoss
    layer_weights:
      # before relu
      'conv1_2': 0.1
      'conv2_2': 0.1
      'conv3_4': 1
      'conv4_4': 1
      'conv5_4': 1
    vgg_type: vgg19
    use_input_norm: true
    perceptual_weight: !!float 1.0
    style_weight: 0
    range_norm: false
    criterion: l1

  tv_opt:
    type: L_TV
    loss_weight: 1.0

  ue_atten_opt:
    type: MSELoss
    loss_weight: 1
    reduction: mean

  aw_opt:
    type: AutomaticWeightedLoss
    num: 5

  # gan loss
  gan_opt:
    type: GANLoss
    gan_type: vanilla
    real_label_val: 1.0
    fake_label_val: 0.0
    loss_weight: !!float 1e-1

  net_d_iters: 3
  net_d_init_iters: 0
  net_g_iters: 1


val:
  val_freq: !!float 5e3
  save_img: False

  metrics:
    psnr: # metric name
      type: calculate_psnr
      crop_border: 4
      test_y_channel: false

# logging settings
logger:
  print_freq: 1000
  save_checkpoint_freq: !!float 5e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500